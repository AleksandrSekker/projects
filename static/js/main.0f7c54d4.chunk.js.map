{"version":3,"sources":["img/home/restaurant.png","img/home/clinic.png","img/home/gallery.png","img/home/open.png","component/text-open/One.js","component/text-open/Two.js","component/text-open/Three.js","component/text-open/Open.js","component/form/Form.js","component/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","One","props","useSpring","opacity","delay","transition","from","div","style","className","Two","Three","Open","Form","Background","styled","section","Container","RegisterText","h1","Input","input","Paragraph","p","Button","button","action","placeholder","Home","href","src","require","alt","to","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+QAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,qICG5B,SAASC,IACtB,IAAMC,EAAQC,YAAU,CACtBC,QAAS,EACTC,MAAO,IACPC,WAAY,IACZC,KAAM,CAAEH,QAAS,KAGnB,OACE,kBAAC,IAASI,IAAV,CAAcC,MAAOP,GACnB,yBAAKQ,UAAU,uBACb,yBAAKA,UAAU,8BAAf,gB,MCXO,SAASC,IACtB,IAAMT,EAAQC,YAAU,CACtBC,QAAS,EACTC,MAAO,KACPC,WAAY,IACZC,KAAM,CAAEH,QAAS,KAEnB,OACE,kBAAC,IAASI,IAAV,CAAcC,MAAOP,GACnB,yBAAKQ,UAAU,uBACb,yBAAKA,UAAU,8BAAf,sB,MCVO,SAASE,IACtB,IAAMV,EAAQC,YAAU,CACtBC,QAAS,EACTC,MAAO,IACPC,WAAY,IACZC,KAAM,CAAEH,QAAS,KAEnB,OACE,kBAAC,IAASI,IAAV,CAAcC,MAAOP,GACnB,yBAAKQ,UAAU,yBACb,yBAAKA,UAAU,gCAAf,c,MCRO,SAASG,IACtB,OACE,6BACE,yBAAKH,UAAU,iBACb,kBAACT,EAAD,MACA,kBAACU,EAAD,MACA,kBAACC,EAAD,Q,ipCCRO,SAASE,IACtB,IAAMC,EAAaC,IAAOC,QAAV,KAOVC,EAAYF,IAAOR,IAAV,KAcTW,EAAeH,IAAOI,GAAV,KAGZC,EAAQL,IAAOM,MAAV,KAQLC,EAAYP,IAAOQ,EAAV,KAGTC,EAAST,IAAOU,OAAV,KASZ,OACE,kBAACX,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,0BAEA,0BAAMQ,OAAO,GAAGjB,UAAU,IACxB,kBAACa,EAAD,iBACA,kBAACF,EAAD,CAAOO,YAAY,mBACnB,kBAACL,EAAD,cACA,kBAACF,EAAD,CAAOO,YAAY,gBACnB,kBAACL,EAAD,iBACA,kBAACF,EAAD,CAAOO,YAAY,mBACnB,kBAACL,EAAD,yBACA,kBAACF,EAAD,CAAOO,YAAY,0BAErB,kBAACH,EAAD,iB,MC5DO,SAASI,IACtB,OACE,yBAAKnB,UAAU,OACb,yBAAKA,UAAU,UACb,uBAAGoB,KAAK,iDACN,yBACEC,IAAKC,EAAQ,IACbhB,OAAO,aACPiB,IAAI,OAIV,yBAAKvB,UAAU,UACb,uBAAGoB,KAAK,2CACN,yBACEC,IAAKC,EAAQ,IACbC,IAAI,GACJjB,OAAO,gBAGX,kBAAC,IAAD,CAAMkB,GAAG,SAAT,SAEF,yBAAKxB,UAAU,UACb,uBAAGoB,KAAK,8CACN,yBACEC,IAAKC,EAAQ,IACbC,IAAI,GACJjB,OAAO,iBAIb,yBAAKN,UAAU,UACb,kBAAC,IAAD,CAAMwB,GAAG,SACP,yBACEH,IAAKC,EAAQ,IACbC,IAAI,GACJjB,OAAO,kB,MCnBJmB,MAZf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWT,IACjC,kBAAC,IAAD,CAAOQ,KAAK,QAAQC,UAAWzB,IAC/B,kBAAC,IAAD,CAAOwB,KAAK,QAAQC,UAAWxB,OCFnByB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0f7c54d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/restaurant.914396e2.png\";","module.exports = __webpack_public_path__ + \"static/media/clinic.d191e198.png\";","module.exports = __webpack_public_path__ + \"static/media/gallery.59f2184d.png\";","module.exports = __webpack_public_path__ + \"static/media/open.094f60ac.png\";","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport '../../css/text-open/one.css';\nexport default function One() {\n  const props = useSpring({\n    opacity: 1,\n    delay: 1000,\n    transition: 1000,\n    from: { opacity: 0 }\n  });\n\n  return (\n    <animated.div style={props}>\n      <div className='containerForTextOne'>\n        <div className='anotherContainerForTextOne'>OPEN EVERY</div>\n      </div>\n    </animated.div>\n  );\n}\n","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport '../../css/text-open/two.css';\nexport default function Two() {\n  const props = useSpring({\n    opacity: 1,\n    delay: 1500,\n    transition: 1000,\n    from: { opacity: 0 }\n  });\n  return (\n    <animated.div style={props}>\n      <div className='containerForTextTwo'>\n        <div className='anotherContainerForTextTwo'>FRIDAY, SATURDAY</div>\n      </div>\n    </animated.div>\n  );\n}\n","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport '../../css/text-open/three.css';\nexport default function Three() {\n  const props = useSpring({\n    opacity: 1,\n    delay: 2000,\n    transition: 1000,\n    from: { opacity: 0 }\n  });\n  return (\n    <animated.div style={props}>\n      <div className='containerForTextThree'>\n        <div className='anotherContainerForTextThree'>& SUNDAY</div>\n      </div>\n    </animated.div>\n  );\n}\n","import React from 'react';\nimport One from './One';\nimport Two from './Two';\nimport Three from './Three';\nimport '../../css/text-open/Open.css';\nexport default function Open() {\n  return (\n    <div>\n      <div className='openContainer'>\n        <One />\n        <Two />\n        <Three />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport '../../css/form/form.css';\nimport styled from 'styled-components';\nexport default function Form() {\n  const Background = styled.section`\n    background: lightblue;\n    height: 100%;\n    padding-top: 5rem;\n    padding-bottom: 5rem;\n  `;\n\n  const Container = styled.div`\n    background: white;\n    border-radius: 1rem;\n    margin: auto;\n    margin-top: 10vh;\n    border: 2px solid white;\n    padding: 2rem;\n    @media (max-width: 600px) {\n      width: 90%;\n    }\n    @media (min-width: 600px) {\n      width: 25rem;\n    }\n  `;\n  const RegisterText = styled.h1`\n    font-size: 2rem;\n  `;\n  const Input = styled.input`\n    border: none;\n    border-bottom: 0.2rem solid lightblue;\n    height: 3rem;\n    margin-bottom: 0.5rem;\n    font-size: 1.5rem;\n    outline: none;\n  `;\n  const Paragraph = styled.p`\n    color: gray;\n  `;\n  const Button = styled.button`\n    background: #ff896b;\n    color: white;\n    width: 100%;\n    height: 3rem;\n    border-radius: 0.5rem;\n    border: none;\n    font-size: 2rem;\n  `;\n  return (\n    <Background>\n      <Container>\n        <RegisterText>Register with us </RegisterText>\n\n        <form action='' className=''>\n          <Paragraph>Username</Paragraph>\n          <Input placeholder='Enter username' />\n          <Paragraph>Email</Paragraph>\n          <Input placeholder='Enter email' />\n          <Paragraph>Password</Paragraph>\n          <Input placeholder='Enter password' />\n          <Paragraph>Confirm Password</Paragraph>\n          <Input placeholder='Enter password again' />\n        </form>\n        <Button>Submit</Button>\n      </Container>\n    </Background>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/home.css';\nexport default function Home() {\n  return (\n    <div className='row'>\n      <div className='column'>\n        <a href='https://aleksandrsekker.github.io/restaurant/'>\n          <img\n            src={require('../img/home/restaurant.png')}\n            styled='width:100%'\n            alt=''\n          />\n        </a>\n      </div>\n      <div className='column'>\n        <a href='https://aleksandrsekker.github.io/test/'>\n          <img\n            src={require('../img/home/clinic.png')}\n            alt=''\n            styled='width:100%'\n          />\n        </a>\n        <Link to='/form'>Form</Link>\n      </div>\n      <div className='column'>\n        <a href='https://aleksandrsekker.github.io/gallery/'>\n          <img\n            src={require('../img/home/gallery.png')}\n            alt=''\n            styled='width:100%'\n          />\n        </a>\n      </div>\n      <div className='column'>\n        <Link to='/open'>\n          <img\n            src={require('../img/home/open.png')}\n            alt=''\n            styled='width:100%'\n          />\n        </Link>\n      </div>\n      {/* <div className='row'>\n        <div className='column'>\n          <Link to='/form'>Form</Link>\n        </div>\n      </div> */}\n    </div>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Open from './component/text-open/Open';\nimport Form from './component/form/Form';\nimport Home from './component/Home';\nimport './App.css';\n// import Header from './component/Header';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/open' component={Open} />\n        <Route path='/form' component={Form} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}